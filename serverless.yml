app: cookbuk
service: cookbuk

frameworkVersion: '2'

custom:
  # documentation: ${file(documentation/endpoints.doc.yml):documentation}
  userTableName: 'users-table-${self:provider.stage}'
  recipeTableName: 'recipes-table1-${self:provider.stage}'
  dynamodb:
      stages:
          - dev
      start:
          port: 8000
          migrate: true
      migration:
          dir: offline/migrations

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: '20201221'
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
            - Fn::GetAtt: [ RecipesTable, Arn ]
  environment:
    USERS_TABLE: ${self:custom.userTableName}
    RECIPES_TABLE: ${self:custom.recipeTableName}

functions:
  api:
    handler: src/RecipesLambda.handler
    timeout: 1 # seconds
    memorySize: 128 # mb
    events:
      - http:
          path: /recipes
          method: POST
          authorizer:
            arn: arn:aws:cognito-idp:us-east-1:820439974556:userpool/us-east-1_QhoI0fvqu
          # documentation: ${file(documentation/endpoints.doc.yml):endpoints.createRecipe}
      - http:
          path: /recipes
          method: GET
          authorizer:
            arn: arn:aws:cognito-idp:us-east-1:820439974556:userpool/us-east-1_QhoI0fvqu
          # documentation: ${file(documentation/endpoints.doc.yml):endpoints.getRecipes}
      - http:
          path: /{proxy+}
          method: ANY
          authorizer:
            arn: arn:aws:cognito-idp:us-east-1:820439974556:userpool/us-east-1_QhoI0fvqu

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dynamodb-local
  # - serverless-openapi-documentation

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.userTableName}
    RecipesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: recipeId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
          - AttributeName: recipeTitle
            AttributeType: S
        KeySchema:
          - AttributeName: recipeId
            KeyType: HASH
          - AttributeName: userId
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: userIndex
            KeySchema: 
              - AttributeName: userId
                KeyType: HASH
              - AttributeName: recipeTitle
                KeyType: RANGE
            Projection: 
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.recipeTableName}
